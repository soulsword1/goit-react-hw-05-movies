{"version":3,"file":"static/js/307.e4542fe2.chunk.js","mappings":"uOAIe,SAASA,IAAU,IAAD,EAC/B,GAA4BC,EAAAA,EAAAA,YAA5B,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAK,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GACrCC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,YCVG,SAA8BJ,GACzC,IAEMK,EAAG,4DAFO,mCAEP,kBAAyEL,EAAzE,WAET,OAAOM,MAAMD,GAAKE,MAAK,SAAAC,GACrB,OAAIA,EAAIC,GACCD,EAAIE,OAGNC,QAAQC,OAAO,IAAIC,MAAM,oKACjC,GACF,EDDCC,CAAqBd,GAAOO,MAAK,SAAAQ,GAAI,OAAInB,EAAUmB,EAAKC,QAAnB,GACtC,GAAE,CAAChB,IAOJ,OACE,iCACE,kBAAMiB,SAPO,SAAAC,GACfA,EAAEC,iBACFpB,EAAgB,CAAEC,MAAOkB,EAAEE,OAAOC,MAAMC,OACzC,EAIG,WACE,kBAAOC,KAAK,WACZ,0CAED5B,IACC,wBACGA,EAAO6B,KAAI,YAA0B,IAAvBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,MAAOH,EAAW,EAAXA,KACxB,OAAIG,GAEA,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKF,GAAMG,MAAO,CAAEC,KAAM3B,GAAlC,SACGwB,KAFID,IASX,yBACE,SAAC,KAAD,CAAME,GAAE,UAAKF,GAAb,SAAoBF,KADbE,EAIZ,QAKV,C","sources":["pages/Movies.js","services/FetchMovieByTitleAPI.js"],"sourcesContent":["import { useSearchParams, Link, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport FetchMovieByTitleAPI from '../services/FetchMovieByTitleAPI';\n\nexport default function Movies() {\n  const [movies, setMovies] = useState();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n  const location = useLocation();\n\n  useEffect(() => {\n    FetchMovieByTitleAPI(query).then(data => setMovies(data.results));\n  }, [query]);\n\n  const onSearch = e => {\n    e.preventDefault();\n    setSearchParams({ query: e.target.movie.value });\n  };\n\n  return (\n    <>\n      <form onSubmit={onSearch}>\n        <input name=\"movie\" />\n        <button>Search</button>\n      </form>\n      {movies && (\n        <ul>\n          {movies.map(({ id, title, name }) => {\n            if (title) {\n              return (\n                <li key={id}>\n                  <Link to={`${id}`} state={{ from: location }}>\n                    {title}\n                  </Link>\n                </li>\n              );\n            }\n\n            return (\n              <li key={id}>\n                <Link to={`${id}`}>{name}</Link>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n}\n","export default function FetchMovieByTitleAPI(query) {\n    const api_key = '9852f66ffe27e9e772243ba7caefae3c';\n  \n    const url = `https://api.themoviedb.org/3/search/movie?api_key=${api_key}&query=${query}&page=1`;\n  \n    return fetch(url).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n  \n      return Promise.reject(new Error('Информация о фильме не найдена'));\n    });\n  }\n\n"],"names":["Movies","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","query","get","location","useLocation","useEffect","url","fetch","then","res","ok","json","Promise","reject","Error","FetchMovieByTitleAPI","data","results","onSubmit","e","preventDefault","target","movie","value","name","map","id","title","to","state","from"],"sourceRoot":""}