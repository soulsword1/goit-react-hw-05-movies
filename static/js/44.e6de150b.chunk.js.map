{"version":3,"file":"static/js/44.e6de150b.chunk.js","mappings":"6NAIe,SAASA,IACtB,IAAQC,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YCRG,SAA8BL,GAC3C,IAEMM,EAAG,6CAAyCN,EAAzC,4BAFO,mCAEP,WAET,OAAOO,MAAMD,GAAKE,MAAK,SAAAC,GACrB,OAAIA,EAAIC,GACCD,EAAIE,OAGNC,QAAQC,OAAO,IAAIC,MAAM,oKACjC,GACF,EDHGC,CAAqBf,GAAIQ,MAAK,SAAAQ,GAAI,OAAIZ,EAAWY,EAAKC,QAApB,GACnC,GAAE,CAACjB,KAGF,wBACGG,EACCA,EAAQe,KAAI,SAAAC,GACV,OACE,2BACE,qCAAaA,EAAEC,WACf,uBAAID,EAAEE,YAFCF,EAAEC,OAKd,KAED,sEAIP,C","sources":["components/Reviews/Reviews.js","services/FetchMovieReviewsAPI.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport FetchMovieReviewsAPI from '../../services/FetchMovieReviewsAPI';\n\nexport default function Cast() {\n  const { id } = useParams();\n  const [reviews, setReviews] = useState(null);\n\n  useEffect(() => {\n    FetchMovieReviewsAPI(id).then(data => setReviews(data.results));\n  }, [id]);\n\n  return (\n    <ul>\n      {reviews ? (\n        reviews.map(r => {\n          return (\n            <li key={r.author}>\n              <h3>Author: {r.author}</h3>\n              <p>{r.content}</p>\n            </li>\n          );\n        })\n      ) : (\n        <li>We don't have any reviews for this movie</li>\n      )}\n    </ul>\n  );\n}\n","export default function FetchMovieReviewsAPI(id) {\n  const api_key = '9852f66ffe27e9e772243ba7caefae3c';\n\n  const url = `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${api_key}&page=1`;\n\n  return fetch(url).then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(new Error('Информация о фильме не найдена'));\n  });\n}\n"],"names":["Cast","id","useParams","useState","reviews","setReviews","useEffect","url","fetch","then","res","ok","json","Promise","reject","Error","FetchMovieReviewsAPI","data","results","map","r","author","content"],"sourceRoot":""}