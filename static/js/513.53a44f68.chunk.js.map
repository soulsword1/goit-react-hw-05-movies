{"version":3,"file":"static/js/513.53a44f68.chunk.js","mappings":"oPAEaA,EAAOC,EAAAA,EAAAA,KAAH,mZAgBJC,EAAaD,EAAAA,EAAAA,OAAH,wG,SCfR,SAASE,EAAT,GAAmC,IAAbC,EAAY,EAAZA,SAMnC,OACE,UAACJ,EAAD,CAAMI,SANS,SAAAC,GACfA,EAAEC,iBACFF,EAAUC,EAAEE,OAAOC,MAAMC,MAC1B,EAGC,WACI,kBAAOC,KAAK,WACZ,SAACR,EAAD,uBAGP,CCVc,SAASS,IAAU,IAAD,EAC/B,GAA4BC,EAAAA,EAAAA,YAA5B,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACIC,EAAK,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GACnCC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,YCXG,SAA8BJ,GACzC,IAEMK,EAAG,4DAFO,mCAEP,kBAAyEL,EAAzE,WAET,OAAOM,MAAMD,GAAKE,MAAK,SAAAC,GACrB,OAAIA,EAAIC,GACCD,EAAIE,OAGNC,QAAQC,OAAO,IAAIC,MAAM,oKACjC,GACF,EDACC,CAAqBd,GAAOO,MAAK,SAAAQ,GAAI,OAAInB,EAAUmB,EAAKC,QAAnB,GACtC,GAAE,CAAChB,IAIJ,OACE,iCACA,SAACf,EAAD,CAAYC,SAJG,SAAAc,GAAK,OAAID,EAAgB,CAAEC,MAAAA,GAAtB,IAKjBL,IACC,wBACGA,EAAOsB,KAAI,YAA0B,IAAvBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,MAAO3B,EAAW,EAAXA,KACxB,OAAI2B,GAEA,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKF,GAAMG,MAAO,CAAEC,KAAMpB,GAAlC,SACGiB,KAFID,IASX,yBACE,SAAC,KAAD,CAAME,GAAE,UAAKF,GAAb,SAAoB1B,KADb0B,EAIZ,QAKV,C","sources":["components/MoviesForm/MoviesForm.styled.js","components/MoviesForm/MoviesForm.js","pages/Movies.js","services/FetchMovieByTitleAPI.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: inline-block;\n  margin: 0 auto;\n  margin-left: 15px;\n  padding: 10px;\n\n  color: #fff;\n  text-decoration: none;\n  background-color: #647c90;\n  border-radius: 5px;\n  border: 1px solid transparent;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\n\nexport const FormButton = styled.button`\n  color: #970c10;\n  cursor: pointer;\n\n  &:hover {\n    color: #3b3b3b;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Form, FormButton } from './MoviesForm.styled';\n\nexport default function MoviesForm({ onSubmit }) {\n  const onSearch = e => {\n    e.preventDefault();\n    onSubmit( e.target.movie.value);\n  };\n\n  return (\n    <Form onSubmit={onSearch}>\n        <input name=\"movie\" />\n        <FormButton>Search</FormButton>\n    </Form>\n  );\n}\n\nMoviesForm.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","import { useSearchParams, Link, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport FetchMovieByTitleAPI from '../services/FetchMovieByTitleAPI';\nimport MoviesForm from '../components/MoviesForm';\n\nexport default function Movies() {\n  const [movies, setMovies] = useState();\n  const [searchParams, setSearchParams] = useSearchParams();\n  let query = searchParams.get('query') ?? '';\n  const location = useLocation();\n\n  useEffect(() => {\n    FetchMovieByTitleAPI(query).then(data => setMovies(data.results));\n  }, [query]);\n\n  const onSubmit = query => setSearchParams({ query});\n\n  return (\n    <>\n    <MoviesForm onSubmit={onSubmit} />\n      {movies && (\n        <ul>\n          {movies.map(({ id, title, name }) => {\n            if (title) {\n              return (\n                <li key={id}>\n                  <Link to={`${id}`} state={{ from: location }}>\n                    {title}\n                  </Link>\n                </li>\n              );\n            }\n\n            return (\n              <li key={id}>\n                <Link to={`${id}`}>{name}</Link>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n}\n\n","export default function FetchMovieByTitleAPI(query) {\n    const api_key = '9852f66ffe27e9e772243ba7caefae3c';\n  \n    const url = `https://api.themoviedb.org/3/search/movie?api_key=${api_key}&query=${query}&page=1`;\n  \n    return fetch(url).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n  \n      return Promise.reject(new Error('Информация о фильме не найдена'));\n    });\n  }\n\n"],"names":["Form","styled","FormButton","MoviesForm","onSubmit","e","preventDefault","target","movie","value","name","Movies","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","query","get","location","useLocation","useEffect","url","fetch","then","res","ok","json","Promise","reject","Error","FetchMovieByTitleAPI","data","results","map","id","title","to","state","from"],"sourceRoot":""}