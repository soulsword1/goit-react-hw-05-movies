{"version":3,"file":"static/js/639.6b12e1e3.chunk.js","mappings":"uOAIe,SAASA,IAAgC,IAAD,IAC7CC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAmBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,WAkBxD,OAhBAC,QAAQC,IAAIL,IAEZM,EAAAA,EAAAA,YAAU,WACJb,GCbO,SAA8Bc,GAC3C,IAEMC,EAAG,6CAAyCD,EAAzC,oBAFO,oCAIhB,OAAOE,MAAMD,GAAKE,MAAK,SAAAC,GACrB,OAAIA,EAAIC,GACCD,EAAIE,OAGNC,QAAQC,OAAO,IAAIC,MAAM,oKACjC,GACF,CDEKC,CAAqBxB,GAASiB,MAAK,SAAAQ,GAAI,OAAIrB,EAASqB,EAAb,GAE1C,GAAE,CAACzB,KAWF,iCACE,SAAC,KAAD,CAAM0B,GAAInB,EAAiBoB,QAA3B,4CACCxB,IACC,gCACE,gBACEyB,IAAK,sCAAwCzB,EAAM0B,YACnDC,IAAK3B,EAAM4B,MACXC,MAAM,MACNC,OAAO,SAET,0BACG9B,EAAM4B,MADT,IACiB5B,EAAM+B,aAAaC,OAAO,EAAG,GAD9C,QAGA,wCAAgBC,KAAKC,MAA2B,IAArBlC,EAAMmC,cAAsB,QACvD,sCACA,uBAAInC,EAAMoC,YACV,oCACA,wBACGpC,EAAMqC,OAAOC,KAAI,SAAAC,GAAC,OACjB,wBAAgBA,EAAEC,MAATD,EAAE5B,GADM,OAIrB,4CACA,2BACE,yBACE,SAAC,KAAD,CAAMY,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGJ,SAAC,EAAAkB,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,WAMX,C","sources":["pages/MovieDetails.js","services/FetchMovieDetailsAPI.js"],"sourcesContent":["import { useState, useEffect, useRef, Suspense } from 'react';\nimport { useParams, useLocation, Link, Outlet } from 'react-router-dom';\nimport FetchMovieDetailsAPI from '../services/FetchMovieDetailsAPI';\n\nexport default function ImageGalleryMovieDetailsItem() {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n  const backLinkLocation = useRef(location.state?.from ?? '/movies');\n\n  console.log(backLinkLocation);\n\n  useEffect(() => {\n    if (movieId) {\n      FetchMovieDetailsAPI(movieId).then(data => setMovie(data));\n    }\n  }, [movieId]);\n  // let imgUrl = ''\n  // if(movie){\n  // const getYear = release_date => release_date.substr(0,4);\n  // const { title, release_date, poster_path, vote_average, overview, genres } = movie;\n  //  imgUrl = `https://image.tmdb.org/t/p/original${poster_path}`;\n  // }\n\n  // console.log(imgUrl)\n\n  return (\n    <>\n      <Link to={backLinkLocation.current}>Назад</Link>\n      {movie && (\n        <section>\n          <img\n            src={'https://image.tmdb.org/t/p/original' + movie.poster_path}\n            alt={movie.title}\n            width=\"300\"\n            height=\"400\"\n          />\n          <h1>\n            {movie.title}({movie.release_date.substr(0, 4)})\n          </h1>\n          <p>User Score: {Math.round(movie.vote_average * 100) / 100}</p>\n          <h2>Overview</h2>\n          <p>{movie.overview}</p>\n          <h3>Genres</h3>\n          <ul>\n            {movie.genres.map(g => (\n              <li key={g.id}>{g.name}</li>\n            ))}\n          </ul>\n          <p>Additional info</p>\n          <ul>\n            <li>\n              <Link to=\"cast\">Cast</Link>\n            </li>\n            <li>\n              <Link to=\"reviews\">Reviews</Link>\n            </li>\n          </ul>\n          <Suspense fallback={<div>Loading...</div>}>\n            <Outlet />\n          </Suspense>\n        </section>\n      )}\n    </>\n  );\n}\n","export default function FetchMovieDetailsAPI(id) {\n  const api_key = '9852f66ffe27e9e772243ba7caefae3c';\n\n  const url = `https://api.themoviedb.org/3/movie/${id}?api_key=${api_key}`;\n\n  return fetch(url).then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(new Error('Информация о фильме не найдена'));\n  });\n}"],"names":["ImageGalleryMovieDetailsItem","movieId","useParams","useState","movie","setMovie","location","useLocation","backLinkLocation","useRef","state","from","console","log","useEffect","id","url","fetch","then","res","ok","json","Promise","reject","Error","FetchMovieDetailsAPI","data","to","current","src","poster_path","alt","title","width","height","release_date","substr","Math","round","vote_average","overview","genres","map","g","name","Suspense","fallback"],"sourceRoot":""}